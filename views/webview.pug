extend layout.pug

block styles
  style(type="text/css").
    p {
      margin: 0;
    }

    .ql-video {
      width: 100%;
      height: 56.25vw;
      max-height: calc(800px / 16 * 9);
    }

    #deskripsi img {
      max-width: 100%;
      height: auto;
    }

block content
  - const URL = process.env.URL;

  <div class="container mt-3 mb-3">
    <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
      if data.images.length > 1
        <div class="carousel-indicators">
          each _, id in data.images
            <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="#{id}" class="#{ id === 0 && 'active'}" aria-current="true" aria-label="Slide #{id}" style="width: 10px; height: 10px; background: #CCCCCC; border-radius: 50%; border-top: 0; border-bottom: 0;"></button>
        </div>

      <div class="carousel-inner" style="border-radius: 10px;">
        each image, id in data.images
          <div class="carousel-item #{id === 0 && 'active'}">
            <img src="#{image}" onclick="openModalImage();currentSlideImage(#{id});" class="d-block w-100 rounded" alt="#{id}-image" width="100%" height="230vh" style="object-fit: cover; object-position: center;">
          </div>
      </div>

      if data.images.length > 1
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators"  data-bs-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Previous</span>
        </button>

      if data.images.length > 1
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators"  data-bs-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Next</span>
        </button>
    </div>

    <div class="row align-items-center justify-content-between">
      <div class="col">
        <p class="mt-3" style="color: #282937; font-size: 20px; margin-bottom: 0px; font-family: 'Circular Std Bold', sans-serif;">#{data.ket_header}</p>
        <p style="color: #787885; font-size: 12px; margin-top: 6px; font-family: 'Circular Std Book', sans-serif">#{createdAt}</p>
      </div>

      <div class="col text-end">
        <button type="button" class="btn btn-outline-primary btn-sm" onclick="openModalImage()">Lihat</button>
      </div>
    </div>

    if data.kategori_berita === 'event'
      <div style="margin-top: 37px;">
        <p style="margin-bottom: 12px;">
          div(class="d-flex flex-row bd-highlight")
            div(class="bd-highlight me-2")
              <img src="#{URL}/assets/webviews/calendar.png" style="width: 16px; height: 16px;" />
            div(class="bd-highlight")
              <span style="font-size: 14px; color: #4F4F4F; font-family: 'Circular Std Book', sans-serif;">#{tglEvent}</span>
        </p>
        
        <p>
          div(class="d-flex flex-row bd-highlight")
            div(class="bd-highlight me-2")
              <img src="#{URL}/assets/webviews/location.png" style="width: 16px; height: 16px;" />
            div(class="bd-highlight")
              <span style="font-size: 14px; color: #4F4F4F; font-family: 'Circular Std Book', sans-serif;">#{data.lokasi}</span>
        </p>
      </div>

      <div style="margin-top: 36px;">
        <p style="color: #282937; font-size: 14px; font-family: 'Circular Std Bold', sans-serif;">Tentang Acara</p>
      </div>

    <div id="pdf-viewer-container" class="w-100">
      <div id="pdf-viewer"></div>
    </div>

    <div id="deskripsi" style="text-align: justify; color: #4F4F4F; font-size: 12px; line-height: 21px; font-family: 'Circular Std Book', sans-serif;">
      != data.deskripsi

      if data.berita_id == 46
        - for (let i = 1; i <= 15; i++)
            if i === 1
              <div class="mt-3 mb-3">
            else
              <div class="mb-3">

            <img src="/assets/07072021/#{i}.jpg" alt="#{id}-image" style="max-width: 100%; height: auto;">
            </div>
    </div>
  </div>

  <div id="modalImage" class="modal-image">
    <span class="modal-image-close modal-image-cursor" onclick="closeModalImage()">&times;</span>

    <div class="modal-image-content">
      each image, id in data.images
        <div class="modal-image-slides modal-image-zoom">
          <img src="#{image}" alt="#{id}-image" style="width: 100%;">
        </div>

      if data.images.length > 1
        <a class="modal-image-prev" onclick="plusSlidesImage(-1)">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        </a>

      if data.images.length > 1
        <a class="modal-image-next" onclick="plusSlidesImage(1)">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
        </a>
    </div>

    if data.images.length > 1
      <div class="modal-image-container-dots">
        each _, id in data.images
          <button type="button" onclick="currentSlideImage(#{id})" class="modal-image-dots" style="width: 10px; height: 10px; background: #CCCCCC; border-radius: 50%; border: 0; padding: 0; margin: 0 5px;"></button>
      </div>
  </div>

block scripts
  script.
    const url = !{JSON.stringify(data.deskripsi_pdf)};
    let thePdf = null;

    pdfjsLib.getDocument(url).promise.then(function (pdf) {
      thePdf = pdf;
      const viewer = document.getElementById('pdf-viewer');

      for (page = 1; page <= pdf.numPages; page++) {
        canvas = document.createElement("canvas");    
        canvas.className = 'pdf-page-canvas';         
        viewer.appendChild(canvas);            
        renderPage(page, canvas);
      }
    });

    function renderPage(pageNumber, canvas) {
      thePdf.getPage(pageNumber).then(function (page) {
        const container = document.getElementById('pdf-viewer-container');
        let viewport = page.getViewport(1);
        const scale = container.clientWidth / viewport.width;
        viewport = page.getViewport(scale);
        canvas.height = viewport.height;
        canvas.width = viewport.width;          
        page.render({canvasContext: canvas.getContext('2d'), viewport: viewport});
      });
    }